<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>